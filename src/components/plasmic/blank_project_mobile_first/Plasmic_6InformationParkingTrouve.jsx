// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 98sZpX3o3cqNhorsdtcuRP
// Component: MU9qJFn-RL
import * as React from "react";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Button from "../../Button"; // plasmic-import: pCdDmYaj73Q/component
import { useScreenVariants as useScreenVariants_9Br8OmEmlKp } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: 9Br8OmEMLKp/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_blank_project_mobile_first.module.css"; // plasmic-import: 98sZpX3o3cqNhorsdtcuRP/projectcss
import sty from "./Plasmic_6InformationParkingTrouve.module.css"; // plasmic-import: MU9qJFn-RL/css
import Polygon1Icon from "./icons/PlasmicIcon__Polygon1"; // plasmic-import: yI0lMqdMR1I/icon
import Searchsvg2Icon from "./icons/PlasmicIcon__Searchsvg2"; // plasmic-import: 8R8e7nHTx/icon
import GeosvgIcon from "./icons/PlasmicIcon__Geosvg"; // plasmic-import: m3jK-J1WY/icon
import ClockHistorysvgIcon from "./icons/PlasmicIcon__ClockHistorysvg"; // plasmic-import: 3jSeOuvz6/icon
import ListsvgIcon from "./icons/PlasmicIcon__Listsvg"; // plasmic-import: xFxMcfslv/icon
import Starsvg2Icon from "./icons/PlasmicIcon__Starsvg2"; // plasmic-import: sIXlj-e3g/icon

export const Plasmic_6InformationParkingTrouve__VariantProps = new Array();

export const Plasmic_6InformationParkingTrouve__ArgProps = new Array();

function Plasmic_6InformationParkingTrouve__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants_9Br8OmEmlKp()
  });

  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"informationParking"}
            data-plasmic-override={overrides.informationParking}
            className={classNames(projectcss.all, sty.informationParking)}
          >
            <div
              data-plasmic-name={"frame2"}
              data-plasmic-override={overrides.frame2}
              className={classNames(projectcss.all, sty.frame2)}
            >
              <div
                data-plasmic-name={"freePark"}
                data-plasmic-override={overrides.freePark}
                className={classNames(projectcss.all, sty.freePark)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__cIyz
                  )}
                >
                  {"FreePark"}
                </div>
              </div>
            </div>

            <div
              data-plasmic-name={"frame6"}
              data-plasmic-override={overrides.frame6}
              className={classNames(projectcss.all, sty.frame6)}
            >
              <div
                data-plasmic-name={"frame7"}
                data-plasmic-override={overrides.frame7}
                className={classNames(projectcss.all, sty.frame7)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__sJdRc
                  )}
                >
                  {"Place proposée"}
                </div>
              </div>

              <div
                data-plasmic-name={"image1"}
                data-plasmic-override={overrides.image1}
                className={classNames(projectcss.all, sty.image1)}
              />

              <div
                data-plasmic-name={"group5"}
                data-plasmic-override={overrides.group5}
                className={classNames(projectcss.all, sty.group5)}
              >
                <div
                  data-plasmic-name={"frame9"}
                  data-plasmic-override={overrides.frame9}
                  className={classNames(projectcss.all, sty.frame9)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___1FwcU
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>
                        {"Pl. Rihour\n59800 Lille\n\n"}
                      </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontStyle: "italic" }}
                      >
                        {"8 places disponibles"}
                      </span>
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  </div>
                </div>

                <Polygon1Icon
                  className={classNames(projectcss.all, sty.svg__jMyvG)}
                  role={"img"}
                />
              </div>
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__kdlC
              )}
            >
              {"FreePark a trouvé une place pour vous :)"}
            </div>

            <div
              data-plasmic-name={"frame5"}
              data-plasmic-override={overrides.frame5}
              className={classNames(projectcss.all, sty.frame5)}
            >
              <a
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link__x0AxR
                )}
                href={"/mes-dernieres-recherches"}
              >
                <Searchsvg2Icon
                  className={classNames(projectcss.all, sty.svg__xOzmW)}
                  role={"img"}
                />
              </a>

              <a
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link__wKfeJ
                )}
                href={"/ma-position"}
              >
                <GeosvgIcon
                  className={classNames(projectcss.all, sty.svg__hajpq)}
                  role={"img"}
                />
              </a>

              <a
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link__xkSqp
                )}
                href={"/mes-dernieres-recherches"}
              >
                <ClockHistorysvgIcon
                  className={classNames(projectcss.all, sty.svg__afRfu)}
                  role={"img"}
                />
              </a>

              <a
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link__c5Vba
                )}
                href={"/menu"}
              >
                <ListsvgIcon
                  className={classNames(projectcss.all, sty.svg__ecowi)}
                  role={"img"}
                />
              </a>

              <a
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link__ep6Ot
                )}
                href={"/favoris"}
              >
                <Starsvg2Icon
                  className={classNames(projectcss.all, sty.svg__hvOmC)}
                  role={"img"}
                />
              </a>
            </div>

            <a
              className={classNames(
                projectcss.all,
                projectcss.a,
                sty.link___69W21
              )}
              href={"/menu"}
            >
              <Button
                className={classNames("__wab_instance", sty.button__qsCdS)}
                color={"red"}
              >
                {"Refuser"}
              </Button>
            </a>

            <a
              className={classNames(
                projectcss.all,
                projectcss.a,
                sty.link__ry3
              )}
              href={"/guidage-vers-maps"}
            >
              <Button
                className={classNames("__wab_instance", sty.button__bebOf)}
                color={"blue"}
              >
                {"Itinéraire"}
              </Button>
            </a>
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "informationParking",
    "frame2",
    "freePark",
    "frame6",
    "frame7",
    "image1",
    "group5",
    "frame9",
    "frame5"
  ],

  informationParking: [
    "informationParking",
    "frame2",
    "freePark",
    "frame6",
    "frame7",
    "image1",
    "group5",
    "frame9",
    "frame5"
  ],

  frame2: ["frame2", "freePark"],
  freePark: ["freePark"],
  frame6: ["frame6", "frame7", "image1", "group5", "frame9"],
  frame7: ["frame7"],
  image1: ["image1"],
  group5: ["group5", "frame9"],
  frame9: ["frame9"],
  frame5: ["frame5"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: Plasmic_6InformationParkingTrouve__ArgProps,
      internalVariantPropNames: Plasmic_6InformationParkingTrouve__VariantProps
    });

    return Plasmic_6InformationParkingTrouve__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "Plasmic_6InformationParkingTrouve";
  } else {
    func.displayName = `Plasmic_6InformationParkingTrouve.${nodeName}`;
  }
  return func;
}

export const Plasmic_6InformationParkingTrouve = Object.assign(
  // Top-level Plasmic_6InformationParkingTrouve renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    informationParking: makeNodeComponent("informationParking"),
    frame2: makeNodeComponent("frame2"),
    freePark: makeNodeComponent("freePark"),
    frame6: makeNodeComponent("frame6"),
    frame7: makeNodeComponent("frame7"),
    image1: makeNodeComponent("image1"),
    group5: makeNodeComponent("group5"),
    frame9: makeNodeComponent("frame9"),
    frame5: makeNodeComponent("frame5"),
    // Metadata about props expected for Plasmic_6InformationParkingTrouve
    internalVariantProps: Plasmic_6InformationParkingTrouve__VariantProps,
    internalArgProps: Plasmic_6InformationParkingTrouve__ArgProps
  }
);

export default Plasmic_6InformationParkingTrouve;
/* prettier-ignore-end */
