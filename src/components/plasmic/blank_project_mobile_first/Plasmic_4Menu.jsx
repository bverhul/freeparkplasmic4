// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 98sZpX3o3cqNhorsdtcuRP
// Component: 4P0qTgH7CO
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import Button from "../../Button"; // plasmic-import: pCdDmYaj73Q/component
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_blank_project_mobile_first.module.css"; // plasmic-import: 98sZpX3o3cqNhorsdtcuRP/projectcss
import sty from "./Plasmic_4Menu.module.css"; // plasmic-import: 4P0qTgH7CO/css
import Group4Icon from "./icons/PlasmicIcon__Group4"; // plasmic-import: biiWhOnN_VS/icon
import PersonFillsvgIcon from "./icons/PlasmicIcon__PersonFillsvg"; // plasmic-import: YggFI12yC/icon
import SearchsvgIcon from "./icons/PlasmicIcon__Searchsvg"; // plasmic-import: TnFkSADxSI7/icon
import ClockHistorysvgIcon from "./icons/PlasmicIcon__ClockHistorysvg"; // plasmic-import: 3jSeOuvz6/icon
import GearsvgIcon from "./icons/PlasmicIcon__Gearsvg"; // plasmic-import: YlewgLVWX/icon
import GeosvgIcon from "./icons/PlasmicIcon__Geosvg"; // plasmic-import: m3jK-J1WY/icon
import Starsvg2Icon from "./icons/PlasmicIcon__Starsvg2"; // plasmic-import: sIXlj-e3g/icon
import starsvgInxxExKEy from "./images/starsvg.svg"; // plasmic-import: InxxExKEy/picture

export const Plasmic_4Menu__VariantProps = new Array();

export const Plasmic_4Menu__ArgProps = new Array();

function Plasmic_4Menu__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"menu"}
            data-plasmic-override={overrides.menu}
            className={classNames(projectcss.all, sty.menu)}
          >
            <div
              data-plasmic-name={"frame2"}
              data-plasmic-override={overrides.frame2}
              className={classNames(projectcss.all, sty.frame2)}
            >
              <div
                data-plasmic-name={"freePark"}
                data-plasmic-override={overrides.freePark}
                className={classNames(projectcss.all, sty.freePark)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__iisol
                  )}
                >
                  {"FreePark"}
                </div>
              </div>
            </div>

            <div
              data-plasmic-name={"frame8"}
              data-plasmic-override={overrides.frame8}
              className={classNames(projectcss.all, sty.frame8)}
            >
              <div
                data-plasmic-name={"trouverUnePlace"}
                data-plasmic-override={overrides.trouverUnePlace}
                className={classNames(projectcss.all, sty.trouverUnePlace)}
              >
                <a
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__mXv2
                  )}
                  href={"/mes-dernieres-recherches"}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__wFxAv
                    )}
                  >
                    {"Trouver une place"}
                  </div>
                </a>
              </div>

              <div
                data-plasmic-name={"mesDernieresRecherches"}
                data-plasmic-override={overrides.mesDernieresRecherches}
                className={classNames(
                  projectcss.all,
                  sty.mesDernieresRecherches
                )}
              >
                <a
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__fCvEl
                  )}
                  href={"/mes-dernieres-recherches"}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__rvz46
                    )}
                  >
                    {"Mes dernières recherches"}
                  </div>
                </a>
              </div>

              <div
                data-plasmic-name={"mesAdressesFavorites"}
                data-plasmic-override={overrides.mesAdressesFavorites}
                className={classNames(projectcss.all, sty.mesAdressesFavorites)}
              >
                <a
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__hozWy
                  )}
                  href={"/favoris"}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___1Pws9
                    )}
                  >
                    {"Mes adresses favorites"}
                  </div>
                </a>
              </div>

              <a
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link__tpcE
                )}
                href={"/ma-position"}
              >
                <div
                  data-plasmic-name={"maPositionActuelle"}
                  data-plasmic-override={overrides.maPositionActuelle}
                  className={classNames(projectcss.all, sty.maPositionActuelle)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__hjDwm
                    )}
                  >
                    {"Ma position actuelle"}
                  </div>
                </div>
              </a>

              <div
                data-plasmic-name={"prenomNom"}
                data-plasmic-override={overrides.prenomNom}
                className={classNames(projectcss.all, sty.prenomNom)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__yDzBm
                  )}
                >
                  {"adresse mail"}
                </div>
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__ioO0
                )}
              >
                {"Paramètres"}
              </div>

              <Button
                data-plasmic-name={"deconnexion"}
                data-plasmic-override={overrides.deconnexion}
                className={classNames("__wab_instance", sty.deconnexion)}
                color={"white"}
                link={"/free-park"}
                showEndIcon={true}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__gZoT
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>{""}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#684F4F" }}
                    >
                      {"Déconnexion"}
                    </span>
                    <React.Fragment>{""}</React.Fragment>
                  </React.Fragment>
                </div>
              </Button>

              <Group4Icon
                className={classNames(projectcss.all, sty.svg__sCryU)}
                role={"img"}
              />

              <PersonFillsvgIcon
                className={classNames(projectcss.all, sty.svg__mmSpu)}
                role={"img"}
              />

              <a
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link__o5RWw
                )}
                href={"/mes-dernieres-recherches"}
              >
                <SearchsvgIcon
                  className={classNames(projectcss.all, sty.svg___6IAMj)}
                  role={"img"}
                />
              </a>

              <a
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link___2RQTf
                )}
                href={"/mes-dernieres-recherches"}
              >
                {true ? (
                  <ClockHistorysvgIcon
                    className={classNames(projectcss.all, sty.svg__cap94)}
                    role={"img"}
                  />
                ) : null}
              </a>

              <GearsvgIcon
                className={classNames(projectcss.all, sty.svg__hTWyy)}
                role={"img"}
              />

              <a
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link__wTgDb
                )}
                href={"/ma-position"}
              >
                <GeosvgIcon
                  className={classNames(projectcss.all, sty.svg__rXbx)}
                  role={"img"}
                />
              </a>

              <p.PlasmicImg
                data-plasmic-name={"img"}
                data-plasmic-override={overrides.img}
                alt={""}
                className={classNames(sty.img)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                loading={"lazy"}
                src={{
                  src: starsvgInxxExKEy,
                  fullWidth: 150,
                  fullHeight: 150,
                  aspectRatio: 1
                }}
              />

              <a
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link__vNxz5
                )}
                href={"/favoris"}
              >
                <Starsvg2Icon
                  className={classNames(projectcss.all, sty.svg__qU4EW)}
                  role={"img"}
                />
              </a>
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "menu",
    "frame2",
    "freePark",
    "frame8",
    "trouverUnePlace",
    "mesDernieresRecherches",
    "mesAdressesFavorites",
    "maPositionActuelle",
    "prenomNom",
    "deconnexion",
    "img"
  ],

  menu: [
    "menu",
    "frame2",
    "freePark",
    "frame8",
    "trouverUnePlace",
    "mesDernieresRecherches",
    "mesAdressesFavorites",
    "maPositionActuelle",
    "prenomNom",
    "deconnexion",
    "img"
  ],

  frame2: ["frame2", "freePark"],
  freePark: ["freePark"],
  frame8: [
    "frame8",
    "trouverUnePlace",
    "mesDernieresRecherches",
    "mesAdressesFavorites",
    "maPositionActuelle",
    "prenomNom",
    "deconnexion",
    "img"
  ],

  trouverUnePlace: ["trouverUnePlace"],
  mesDernieresRecherches: ["mesDernieresRecherches"],
  mesAdressesFavorites: ["mesAdressesFavorites"],
  maPositionActuelle: ["maPositionActuelle"],
  prenomNom: ["prenomNom"],
  deconnexion: ["deconnexion"],
  img: ["img"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: Plasmic_4Menu__ArgProps,
      internalVariantPropNames: Plasmic_4Menu__VariantProps
    });

    return Plasmic_4Menu__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "Plasmic_4Menu";
  } else {
    func.displayName = `Plasmic_4Menu.${nodeName}`;
  }
  return func;
}

export const Plasmic_4Menu = Object.assign(
  // Top-level Plasmic_4Menu renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    menu: makeNodeComponent("menu"),
    frame2: makeNodeComponent("frame2"),
    freePark: makeNodeComponent("freePark"),
    frame8: makeNodeComponent("frame8"),
    trouverUnePlace: makeNodeComponent("trouverUnePlace"),
    mesDernieresRecherches: makeNodeComponent("mesDernieresRecherches"),
    mesAdressesFavorites: makeNodeComponent("mesAdressesFavorites"),
    maPositionActuelle: makeNodeComponent("maPositionActuelle"),
    prenomNom: makeNodeComponent("prenomNom"),
    deconnexion: makeNodeComponent("deconnexion"),
    img: makeNodeComponent("img"),
    // Metadata about props expected for Plasmic_4Menu
    internalVariantProps: Plasmic_4Menu__VariantProps,
    internalArgProps: Plasmic_4Menu__ArgProps
  }
);

export default Plasmic_4Menu;
/* prettier-ignore-end */
