// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 98sZpX3o3cqNhorsdtcuRP
// Component: 4qOweDTZDw
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_blank_project_mobile_first.module.css"; // plasmic-import: 98sZpX3o3cqNhorsdtcuRP/projectcss
import sty from "./Plasmic_7ItineraireVersLeParkingTrouve.module.css"; // plasmic-import: 4qOweDTZDw/css
import image39AntFZxO from "./images/image3.png"; // plasmic-import: 9AntFZxO_/picture

export const Plasmic_7ItineraireVersLeParkingTrouve__VariantProps = new Array();

export const Plasmic_7ItineraireVersLeParkingTrouve__ArgProps = new Array();

function Plasmic_7ItineraireVersLeParkingTrouve__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <p.PlasmicImg
            data-plasmic-name={"img"}
            data-plasmic-override={overrides.img}
            alt={""}
            className={classNames(sty.img)}
            displayHeight={"auto"}
            displayMaxHeight={"none"}
            displayMaxWidth={"100%"}
            displayMinHeight={"0"}
            displayMinWidth={"0"}
            displayWidth={"auto"}
            loading={"lazy"}
            src={{
              src: image39AntFZxO,
              fullWidth: 720,
              fullHeight: 1600,
              aspectRatio: undefined
            }}
          />
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: ["root", "img"],
  img: ["img"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: Plasmic_7ItineraireVersLeParkingTrouve__ArgProps,
      internalVariantPropNames:
        Plasmic_7ItineraireVersLeParkingTrouve__VariantProps
    });

    return Plasmic_7ItineraireVersLeParkingTrouve__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "Plasmic_7ItineraireVersLeParkingTrouve";
  } else {
    func.displayName = `Plasmic_7ItineraireVersLeParkingTrouve.${nodeName}`;
  }
  return func;
}

export const Plasmic_7ItineraireVersLeParkingTrouve = Object.assign(
  // Top-level Plasmic_7ItineraireVersLeParkingTrouve renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    img: makeNodeComponent("img"),
    // Metadata about props expected for Plasmic_7ItineraireVersLeParkingTrouve
    internalVariantProps: Plasmic_7ItineraireVersLeParkingTrouve__VariantProps,
    internalArgProps: Plasmic_7ItineraireVersLeParkingTrouve__ArgProps
  }
);

export default Plasmic_7ItineraireVersLeParkingTrouve;
/* prettier-ignore-end */
